name: Build and release

on:
  release:
    types: [created]

jobs:
  build-and-release-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable linux build
        run: flutter config --enable-linux-desktop
      - name: Build artifacts
        run: flutter build linux --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: Polyglot-${{github.ref_name}}-linux.zip
          directory: build/linux/x64/release/bundle
      - name: Linux Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/linux/x64/release/bundle/Polyglot-${{github.ref_name}}-linux.zip

  build-and-release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: Polyglot-${{github.ref_name}}-windows.zip
          directory: build/windows/runner/Release
      - name: Windows Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/windows/runner/Release/Polyglot-${{github.ref_name}}-windows.zip

  build-and-release-macos:
    runs-on: macos-latest
    env:
      MACOS_APP_RELEASE_PATH: build/macos/Build/Products/Release
      APP_NAME: polyglot

    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop
      - name: Build artifacts
        run: flutter build macos --release
      - name: Codesign executable
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          IDENTITY_ID: ${{ secrets.IDENTITY_ID }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          echo "Create Keychain"
          security create-keychain -p $MACOS_CERTIFICATE_PWD build.keychain
          echo "Assign to Login Keychain"
          security default-keychain -s build.keychain
          echo "Unlock the Login Keychain"
          security unlock-keychain -p $MACOS_CERTIFICATE_PWD build.keychain
          echo "Import certificate"
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          echo "Set Key Partition"
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $MACOS_CERTIFICATE_PWD build.keychain
          echo "Find Identity"
          security find-identity
          echo "Sign the app"
          /usr/bin/codesign --force --deep -s $IDENTITY_ID ./$MACOS_APP_RELEASE_PATH/$APP_NAME.app
      - name: "Notarize Release Build"
        uses: devbotsxyz/xcode-notarize@v1
        with:
          product-path: build/macos/Build/Products/Release/Polyglot.app
          appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
          appstore-connect-password: ${{ secrets.NOTARIZATION_PASSWORD }}
      - name: Create a dmg
        run: |
          echo "Install create-dmg"
          brew install create-dmg
          cd $MACOS_APP_RELEASE_PATH
          create-dmg \
            --volname "$APP_NAME" \
            --window-pos 200 120 \
            --window-size 800 529 \
            --icon-size 130 \
            --text-size 14 \
            --icon "$APP_NAME.app" 260 250 \
            --hide-extension "$APP_NAME.app" \
            --app-drop-link 540 250 \
            --hdiutil-quiet \
            "$APP_NAME.dmg" \
            "$APP_NAME.app"
      - name: Mac Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/macos/Build/Products/Release/Polyglot.dmg